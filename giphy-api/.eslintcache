[{"/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/index.js":"1","/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/reportWebVitals.js":"2","/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/App.js":"3","/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/components/GifCard.jsx":"4","/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/components/SearchBar.jsx":"5"},{"size":500,"mtime":1610583312150,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610583312150,"results":"8","hashOfConfig":"7"},{"size":1357,"mtime":1610592715730,"results":"9","hashOfConfig":"7"},{"size":165,"mtime":1610592715730,"results":"10","hashOfConfig":"7"},{"size":1562,"mtime":1610650548950,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mvv4jw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/index.js",[],["25","26"],"/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/reportWebVitals.js",[],"/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/App.js",[],"/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/components/GifCard.jsx",["27","28"],"import React, { Component } from \"react\";\n\nconst GifCard = (props) => (\n  <div className=\"gifcard\">\n    <img src={props.url} />\n  </div>\n);\n\nexport default GifCard;\n","/home/bertom/TTP_Assignments/ReactAPI101/giphy-api/src/components/SearchBar.jsx",["29"],"import React from \"react\";\nimport GifCard from \"./GifCard\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchKey: \"\",\n      data: [],\n    };\n  }\n\n  updateSearch = (event) => {\n    console.log(event.target.value);\n    this.setState({ searchKey: event.target.value });\n  };\n\n  search = (event) => {\n    let searchTerm = event.target.value;\n    fetch(\n      `https://api.giphy.com/v1/gifs/search?q=${searchTerm}&api_key=bYFMRHm7P79nLgVnPaLhYwOxbIgn3CdZ`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        this.setState({ data: response.data });\n        //update data in parent App component\n        this.props.update(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  trending = () => {\n    fetch(\n      `https://api.giphy.com/v1/gifs/trending?api_key=bYFMRHm7P79nLgVnPaLhYwOxbIgn3CdZ`\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.props.update(response.data);\n      })\n\n      .catch((error) => console.error(error));\n  }\n  render() {\n    console.log(this.state.data);\n    return (\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          placeholder=\"Search a Gif\"\n          onChange={this.updateSearch}\n        />\n        <button onClick={this.search} value={this.state.searchKey}>\n          Search\n        </button>\n        <button onClick = {this.trending}>Trending</button>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":5,"column":5,"nodeType":"40","endLine":5,"endColumn":28},{"ruleId":"34","severity":1,"message":"41","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":15},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'GifCard' is defined but never used.","no-global-assign","no-unsafe-negation"]